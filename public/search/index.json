[{"content":"本文针对麒麟、统信UOS、Ubuntu等Linux发行版中出现的/etc/resolv.conf文件被强制重置为127.0.0.53问题，提供两种解决方案。\n问题现象 麒麟系统无法上网，打不开网页。 手动修改/etc/resolv.conf后，重启系统或网络服务时配置被覆盖。 DNS服务器被强制设置为127.0.0.53（systemd-resolved服务地址）。 解决方案 一：临时修改DNS（重启后失效） 1 2 3 4 5 6 # 编辑DNS配置文件 sudo vim /etc/resolv.conf # 替换为以下内容（示例使用Google DNS） nameserver 8.8.8.8 nameserver 8.8.4.4 二：永久解决方案（推荐） 步骤1：停用systemd-resolved服务 1 2 sudo systemctl stop systemd-resolved sudo systemctl disable systemd-resolved 步骤2：安装unbound解析器 1 sudo apt update \u0026amp;\u0026amp; sudo apt install unbound -y 步骤3：配置NetworkManager 1 2 3 4 5 sudo vim /etc/NetworkManager/NetworkManager.conf #在 [main] 段落添加配置： ini dns=unbound 步骤4：应用配置 1 sudo systemctl restart NetworkManager 验证结果 1 2 cat /etc/resolv.conf # 应显示实际配置的DNS服务器 ping baidu.com # 测试网络连通性 📌技术原理 systemd-resolved 是新一代DNS解析服务，会强制接管DNS配置。本方案通过：\n用unbound替代默认解析器 修改NetworkManager的DNS管理策略 建立稳定的DNS配置托管机制 故障排查 如遇网络异常，可通过以下命令恢复： 1 2 sudo systemctl enable systemd-resolved --now sudo rm /etc/NetworkManager/conf.d/dns.conf [!NOTE]\n本文适用于以下国产信创系统： 麒麟Kylin V10 统信UOS 20 Ubuntu 18.04+/Debian 10+\n","date":"2025-03-20T16:45:00+08:00","permalink":"https://n10dz.github.io/p/%E8%A7%A3%E5%86%B3%E5%9B%BD%E4%BA%A7%E4%BF%A1%E5%88%9Blinux%E7%B3%BB%E7%BB%9Fdns%E9%85%8D%E7%BD%AE%E8%A2%AB%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98/","title":"解决国产信创Linux系统DNS配置被重置问题"},{"content":"本文将详细记录我在Windows环境下使用Hugo静态网站生成器和GitHub Pages搭建个人博客的全过程，包含多分支管理策略和自动化部署方案。\n环境准备 1. 安装Hugo Extended 推荐使用扩展版Hugo以获得完整的SCSS支持：\n1 2 # 验证安装（需≥0.83.0） hugo version 2. 初始化Git仓库 1 2 3 hugo new site myblog cd myblog git init 主题配置 使用Stack主题（子模块方式） 1 2 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/stack Copy-Item themes/stack/exampleSite/config.yaml ./config.yaml -Recurse 关键配置项：\n1 2 3 4 5 6 7 baseURL: \u0026#34;https://n10.github.io/\u0026#34; theme: stack params: sidebar: enabled: true social: GitHub: \u0026#34;https://github.com/n10dz/n10.github.io\u0026#34; 分支策略 采用双分支管理：\nmain 分支：存放Hugo源文件 gh-blog 分支：存放生成的静态页面 1 2 3 4 5 6 # 创建干净的分支 git checkout --orphan gh-blog git rm -rf . echo \u0026#34;# Blog Pages\u0026#34; \u0026gt; README.md git add . \u0026amp;\u0026amp; git commit -m \u0026#34;Init pages branch\u0026#34; git checkout -b main 部署流程 1. 推送源码到main分支 1 2 3 4 git remote add origin https://github.com/n10dz/n10.github.io.git git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin main 2. 生成并部署静态页面 1 2 3 4 5 6 7 8 hugo -D # 生成到public目录 cd public git init git checkout -b gh-blog git add . git commit -m \u0026#34;Deploy: $(date \u0026#34;+%Y-%m-%d %H:%M\u0026#34;)\u0026#34; git push origin gh-blog --force 自动化部署（可选） 在.github/workflows/deploy.yml添加GitHub Actions：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 name: Auto Deploy on: [push] jobs: build-deploy: runs-on: windows-latest steps: - uses: actions/checkout@v4 with: submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-blog 注意事项 必须使用Hugo Extended版本 主题建议通过submodule方式引入 GitHub Pages的发布分支需要设置为gh-blog 每次更新内容后需要： 提交源码到main分支 重新生成并提交public目录到gh-blog分支 成果预览 访问你的GitHub Pages地址： https://n10.github.io\n至此，你已经拥有了一个完全免费、可自定义且支持自动化部署的现代博客系统。接下来可以开始创作你的技术文章啦！\n","date":"2022-02-20T15:32:00+08:00","permalink":"https://n10dz.github.io/p/%E5%9C%A8windows%E4%B8%8A%E4%BD%BF%E7%94%A8hugo-github-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%85%A8%E8%AE%B0%E5%BD%95/","title":"在Windows上使用Hugo+GitHub Pages搭建个人博客全记录"}]